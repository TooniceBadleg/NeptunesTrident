using EF;
using System.Linq;
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.3.0.0 (entitiestodtos.codeplex.com).
//     Timestamp: 2017.04.03 - 18:57:04
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System.Text;
using System.Collections.Generic;
using System;

namespace DTO
{

    /// <summary>
    /// Assembler for <see cref="DirFishCondition"/> and <see cref="DirFishConditionDto"/>.
    /// </summary>
    public static partial class DirFishConditionHelper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="DirFishConditionDto"/> converted from <see cref="DirFishCondition"/>.</param>
        static partial void OnDTO(this DirFishCondition entity, DirFishConditionDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="DirFishCondition"/> converted from <see cref="DirFishConditionDto"/>.</param>
        static partial void OnEntity(this DirFishConditionDto dto, DirFishCondition entity);

        /// <summary>
        /// Converts this instance of <see cref="DirFishConditionDto"/> to an instance of <see cref="DirFishCondition"/>.
        /// </summary>
        /// <param name="dto"><see cref="DirFishConditionDto"/> to convert.</param>
        public static DirFishCondition ToEntity(this DirFishConditionDto dto)
        {
            if (dto == null) return null;

            var entity = new DirFishCondition();

            entity.Id = dto.Id;
            entity.Code = dto.Code;
            entity.Name = dto.Name;
            entity.Text = dto.Text;
            entity.Description = dto.Description;
            entity.Active = dto.Active;
            entity.IdCreated = dto.IdCreated;
            entity.DateCreated = dto.DateCreated;
            entity.IdUpdated = dto.IdUpdated;
            entity.DateUpdated = dto.DateUpdated;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="DirFishCondition"/> to an instance of <see cref="DirFishConditionDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="DirFishCondition"/> to convert.</param>
        public static DirFishConditionDto ToDTO(this DirFishCondition entity)
        {
            if (entity == null) return null;

            var dto = new DirFishConditionDto();

            dto.Id = entity.Id;
            dto.Code = entity.Code;
            dto.Name = entity.Name;
            dto.Text = entity.Text;
            dto.Description = entity.Description;
            dto.Active = entity.Active;
            dto.IdCreated = entity.IdCreated;
            dto.DateCreated = entity.DateCreated;
            dto.IdUpdated = entity.IdUpdated;
            dto.DateUpdated = entity.DateUpdated;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="DirFishConditionDto"/> to an instance of <see cref="DirFishCondition"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<DirFishCondition> ToEntities(this IEnumerable<DirFishConditionDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="DirFishCondition"/> to an instance of <see cref="DirFishConditionDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<DirFishConditionDto> ToDTOs(this IEnumerable<DirFishCondition> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}