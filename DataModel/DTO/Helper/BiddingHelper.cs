using EF;
using System.Linq;
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.3.0.0 (entitiestodtos.codeplex.com).
//     Timestamp: 2017.04.15 - 23:41:30
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System.Text;
using System.Collections.Generic;
using System;

namespace DTO
{

    /// <summary>
    /// Assembler for <see cref="Bidding"/> and <see cref="BiddingDto"/>.
    /// </summary>
    public static partial class BiddingHelper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="BiddingDto"/> converted from <see cref="Bidding"/>.</param>
        static partial void OnDTO(this Bidding entity, BiddingDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Bidding"/> converted from <see cref="BiddingDto"/>.</param>
        static partial void OnEntity(this BiddingDto dto, Bidding entity);

        /// <summary>
        /// Converts this instance of <see cref="BiddingDto"/> to an instance of <see cref="Bidding"/>.
        /// </summary>
        /// <param name="dto"><see cref="BiddingDto"/> to convert.</param>
        public static Bidding ToEntity(this BiddingDto dto)
        {
            if (dto == null) return null;

            var entity = new Bidding();

            entity.Id = dto.Id;
            entity.Timestamp = dto.Timestamp;
            entity.IdOffer = dto.IdOffer;
            entity.IdParentBidding = dto.IdParentBidding;
            entity.UnitPrice = dto.UnitPrice;
            entity.Quantity = dto.Quantity;
            entity.IsFinal = dto.IsFinal;
            entity.SmjerBiddingReply = dto.SmjerBiddingReply;
            entity.IdBuyerComany = dto.IdBuyerComany;
            entity.IdUser = dto.IdUser;
            entity.IdCreated = dto.IdCreated;
            entity.DateCreated = dto.DateCreated;
            entity.IdUpdated = dto.IdUpdated;
            entity.DateUpdated = dto.DateUpdated;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Bidding"/> to an instance of <see cref="BiddingDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="Bidding"/> to convert.</param>
        public static BiddingDto ToDTO(this Bidding entity)
        {
            if (entity == null) return null;

            var dto = new BiddingDto();

            dto.Id = entity.Id;
            dto.Timestamp = entity.Timestamp;
            dto.IdOffer = entity.IdOffer;
            dto.IdParentBidding = entity.IdParentBidding;
            dto.UnitPrice = entity.UnitPrice;
            dto.Quantity = entity.Quantity;
            dto.IsFinal = entity.IsFinal;
            dto.SmjerBiddingReply = entity.SmjerBiddingReply;
            dto.IdBuyerComany = entity.IdBuyerComany;
            dto.IdUser = entity.IdUser;
            dto.IdCreated = entity.IdCreated;
            dto.DateCreated = entity.DateCreated;
            dto.IdUpdated = entity.IdUpdated;
            dto.DateUpdated = entity.DateUpdated;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="BiddingDto"/> to an instance of <see cref="Bidding"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Bidding> ToEntities(this IEnumerable<BiddingDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Bidding"/> to an instance of <see cref="BiddingDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<BiddingDto> ToDTOs(this IEnumerable<Bidding> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}