using EF;
using System.Linq;
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.3.0.0 (entitiestodtos.codeplex.com).
//     Timestamp: 2017.04.03 - 18:57:59
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System.Text;
using System.Collections.Generic;
using System;

namespace DTO
{

    /// <summary>
    /// Assembler for <see cref="OfferItem"/> and <see cref="OfferItemDto"/>.
    /// </summary>
    public static partial class OfferItemHelper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="OfferItemDto"/> converted from <see cref="OfferItem"/>.</param>
        static partial void OnDTO(this OfferItem entity, OfferItemDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="OfferItem"/> converted from <see cref="OfferItemDto"/>.</param>
        static partial void OnEntity(this OfferItemDto dto, OfferItem entity);

        /// <summary>
        /// Converts this instance of <see cref="OfferItemDto"/> to an instance of <see cref="OfferItem"/>.
        /// </summary>
        /// <param name="dto"><see cref="OfferItemDto"/> to convert.</param>
        public static OfferItem ToEntity(this OfferItemDto dto)
        {
            if (dto == null) return null;

            var entity = new OfferItem();

            entity.Id = dto.Id;
            entity.IdOffer = dto.IdOffer;
            entity.IdZone = dto.IdZone;
            entity.IdFish = dto.IdFish;
            entity.IdFishCategory = dto.IdFishCategory;
            entity.IsFarmed = dto.IsFarmed;
            entity.Qty = dto.Qty;
            entity.UnitPrice = dto.UnitPrice;
            entity.ProductImage = dto.ProductImage;
            entity.ProductImageBin = dto.ProductImageBin;
            entity.Note = dto.Note;
            entity.IdFishCondition = dto.IdFishCondition;
            entity.CatchTime = dto.CatchTime;
            entity.FreezeTime = dto.FreezeTime;
            entity.IdCreated = dto.IdCreated;
            entity.DateCreated = dto.DateCreated;
            entity.IdUpdated = dto.IdUpdated;
            entity.DateUpdated = dto.DateUpdated;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="OfferItem"/> to an instance of <see cref="OfferItemDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="OfferItem"/> to convert.</param>
        public static OfferItemDto ToDTO(this OfferItem entity)
        {
            if (entity == null) return null;

            var dto = new OfferItemDto();

            dto.Id = entity.Id;
            dto.IdOffer = entity.IdOffer;
            dto.IdZone = entity.IdZone;
            dto.IdFish = entity.IdFish;
            dto.IdFishCategory = entity.IdFishCategory;
            dto.IsFarmed = entity.IsFarmed;
            dto.Qty = entity.Qty;
            dto.UnitPrice = entity.UnitPrice;
            dto.ProductImage = entity.ProductImage;
            dto.ProductImageBin = entity.ProductImageBin;
            dto.Note = entity.Note;
            dto.IdFishCondition = entity.IdFishCondition;
            dto.CatchTime = entity.CatchTime;
            dto.FreezeTime = entity.FreezeTime;
            dto.IdCreated = entity.IdCreated;
            dto.DateCreated = entity.DateCreated;
            dto.IdUpdated = entity.IdUpdated;
            dto.DateUpdated = entity.DateUpdated;

            //custom added code
            if (entity.DirFish != null)
                dto.FishName = entity.DirFish.Text;
            //custom added code
            if (entity.DirFishCategory != null)
                dto.FishCategoryName = entity.DirFishCategory.Text;


            ////////// da li ce ovo stvoriti infinite loop?   --  ovo bas i ne ide
            //////////if (entity.Offer != null)
            //////////    dto.OfferParent = OfferHelper.ToDTO(entity.Offer);
            

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="OfferItemDto"/> to an instance of <see cref="OfferItem"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<OfferItem> ToEntities(this IEnumerable<OfferItemDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="OfferItem"/> to an instance of <see cref="OfferItemDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<OfferItemDto> ToDTOs(this IEnumerable<OfferItem> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}